<EditForm Model="Director" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="row">
        <div class="col">
            <div class="form-group">
                <label><strong>Name:</strong></label>
                <div>
                    <InputText class="form-control" @bind-Value="Director.Name" />
                    <ValidationMessage For="@(() => Director.Name)" />
                </div>
            </div>
            <div class="form-group">
                <label><strong>Date Of Birth:</strong></label>
                <div>
                    <InputDate class="form-control" @bind-Value="Director.DateOfBirth" />
                    <ValidationMessage For="@(() => Director.DateOfBirth)" />
                </div>
            </div>
            <div class="form-group form-markdown">
                <InputMarkdown @bind-Value="Director.Biography"
                               Label="Biography"
                               For="@(() => Director.Biography)" />
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label><strong>Select Image:</strong></label>
                <InputImage Label="Director Picture" OnSelectedImage="PictureSelected"
                            ImageURL="@imageUrl" />
            </div>
        </div>

    </div>
    <button class="btn btn-primary btn-sm" type="submit">Save Changes</button>
</EditForm>

@code {
    [Parameter] public Director Director { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    string imageUrl;

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(Director.Picture))
        {
            imageUrl = Director.Picture;
            Director.Picture = null;
        }
    }
    private void PictureSelected(string imageBase64)
    {
        Director.Picture = imageBase64;
        imageBase64 = null;
        Console.WriteLine(imageBase64);
    }
}